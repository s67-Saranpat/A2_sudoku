int[][] sudokuGrid = new int[9][9];  
int selectedRow = -1;
int selectedCol = -1;
boolean gameWon = false;  

void setup() {
  size(450, 450); 
}

void draw() {
  background(255);  
  
  
  drawSudokuBoard(); 
  
  
  if (selectedRow != -1 && selectedCol != -1) {
    highlightSelectedCell();
  }
  
  
  drawNumbers();
  
  
  if (checkWin()) {
    gameWon = true;
    displayWinMessage();  
  }
}

void drawSudokuBoard() {
  int cols = 9;  
  int rows = 9;  
  int cellWidth = width / cols;
  int cellHeight = height / rows;
  
  
  strokeWeight(1);
  stroke(0);  
  for (int i = 0; i <= cols; i++) {
    line(i * cellWidth, 0, i * cellWidth, height);  
    line(0, i * cellHeight, width, i * cellHeight); 
  }
  
  
  strokeWeight(4);
  for (int i = 0; i <= 3; i++) {
    line(i * (cellWidth * 3), 0, i * (cellWidth * 3), height);  
    line(0, i * (cellHeight * 3), width, i * (cellHeight * 3)); 
  }
}

void highlightSelectedCell() {
  int cellWidth = width / 9;
  int cellHeight = height / 9;
  
  fill(200, 200, 255);  
  noStroke();
  rect(selectedCol * cellWidth, selectedRow * cellHeight, cellWidth, cellHeight);
}

void drawNumbers() {
  int cellWidth = width / 9;
  int cellHeight = height / 9;
  textSize(32);
  textAlign(CENTER, CENTER);
  fill(0); 
  
  
  for (int i = 0; i < 9; i++) {
    for (int j = 0; j < 9; j++) {
      if (sudokuGrid[i][j] != 0) {
        text(sudokuGrid[i][j], j * cellWidth + cellWidth / 2, i * cellHeight + cellHeight / 2);
      }
    }
  }
}

void mousePressed() {
  if (!gameWon) {  
    int cellWidth = width / 9;
    int cellHeight = height / 9;
    
   
    selectedCol = mouseX / cellWidth;
    selectedRow = mouseY / cellHeight;
  }
}

void keyPressed() {
  
  if (!gameWon) {
    
    if (key >= '1' && key <= '9') {
      sudokuGrid[selectedRow][selectedCol] = key - '0'; 
    } else if (key == '0' || key == DELETE || key == BACKSPACE) {
      sudokuGrid[selectedRow][selectedCol] = 0; 
    }
  }
}


boolean checkWin() {
  for (int i = 0; i < 9; i++) {
    for (int j = 0; j < 9; j++) {
      if (sudokuGrid[i][j] == 0) {
        return false; 
      }
    }
  }
  return true;  
}


void displayWinMessage() {
  fill(0, 255, 0);  
  textSize(48);
  textAlign(CENTER, CENTER);
  text("You Win!", width / 2, height / 2);  
}
